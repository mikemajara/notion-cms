/**
 * THIS FILE IS AUTO-GENERATED BY NOTION-CMS
 * DO NOT EDIT DIRECTLY - YOUR CHANGES WILL BE OVERWRITTEN
 * 
 * Generated for database: Product Catalog
 */
import { DatabaseRecord, NotionCMS, QueryBuilder, DatabaseFieldMetadata } from "@mikemajara/notion-cms";
export const RecordProductCatalogFieldTypes = {
  "id": { type: "unique_id" },
  "SKU": { type: "rich_text" },
  "Category": { 
    type: "select",
    options: ["Electronics", "Clothing", "Home & Kitchen", "Accessories", "Sports & Fitness", "Home & Garden", "Home & Office", "Health & Nutrition", "Home & Wellness", "Office Supplies"] as const
  },
  "In Stock": { type: "checkbox" },
  "Image": { type: "files" },
  "Tags": { 
    type: "multi_select",
    options: ["Audio", "Wireless", "Noise-Canceling", "Organic", "Cotton", "Casual", "Smart", "Coffee", "WiFi", "Leather", "Laptop", "Handcrafted", "Portable", "Charger", "Fast-Charging", "Yoga", "Eco-Friendly", "Non-Slip", "Stainless Steel", "Insulated", "Ergonomic", "Precision", "Ceramic", "Handmade", "Plants", "Running", "Lightweight", "Cushioning", "Blue Light", "Computer", "Eye Protection", "Bamboo", "Sustainable", "Kitchen", "LED", "Adjustable", "Touch Controls", "Protein", "Whey", "Vanilla", "Canvas", "Tote", "Shopping", "Essential Oils", "Aromatherapy", "Color-Changing", "Shockproof", "Silicone", "Protection", "Notebook", "Lined", "Hardcover", "Earbuds", "Noise Cancellation", "Digital", "Precise"] as const
  },
  "Description": { type: "rich_text" },
  "Price": { type: "number" },
  "Name": { type: "title" },
} as const satisfies DatabaseFieldMetadata;

export interface RecordProductCatalogAdvanced {
    id: string;
    SKU: { content: string; annotations: any; href: string | null; link?: { url: string } | null }[];
    Category: { id: string; name: string; color: string } | null;
    "In Stock": boolean;
    Image: { name: string; type: string; external?: { url: string }; file?: { url: string; expiry_time: string } }[];
    Tags: { id: string; name: string; color: string }[];
    Description: { content: string; annotations: any; href: string | null; link?: { url: string } | null }[];
    Price: number;
    Name: { content: string; annotations: any; href: string | null; link?: { url: string } | null }[];
}

export interface RecordProductCatalogRaw {
    id: string;
    properties: Record<string, any>;
}

export interface RecordProductCatalog extends DatabaseRecord {
    id: string;
    SKU: string;
    Category: "Electronics" | "Clothing" | "Home & Kitchen" | "Accessories" | "Sports & Fitness" | "Home & Garden" | "Home & Office" | "Health & Nutrition" | "Home & Wellness" | "Office Supplies";
    "In Stock": boolean;
    Image: { name: string; url: string; }[];
    Tags: Array<"Audio" | "Wireless" | "Noise-Canceling" | "Organic" | "Cotton" | "Casual" | "Smart" | "Coffee" | "WiFi" | "Leather" | "Laptop" | "Handcrafted" | "Portable" | "Charger" | "Fast-Charging" | "Yoga" | "Eco-Friendly" | "Non-Slip" | "Stainless Steel" | "Insulated" | "Ergonomic" | "Precision" | "Ceramic" | "Handmade" | "Plants" | "Running" | "Lightweight" | "Cushioning" | "Blue Light" | "Computer" | "Eye Protection" | "Bamboo" | "Sustainable" | "Kitchen" | "LED" | "Adjustable" | "Touch Controls" | "Protein" | "Whey" | "Vanilla" | "Canvas" | "Tote" | "Shopping" | "Essential Oils" | "Aromatherapy" | "Color-Changing" | "Shockproof" | "Silicone" | "Protection" | "Notebook" | "Lined" | "Hardcover" | "Earbuds" | "Noise Cancellation" | "Digital" | "Precise">;
    Description: string;
    Price: number;
    Name: string;
    advanced: RecordProductCatalogAdvanced;
    raw: RecordProductCatalogRaw;
}

// Extend NotionCMS class with database-specific method
/* eslint-disable */
declare module "@mikemajara/notion-cms" {
  interface NotionCMS {
    /**
     * Type-safe query method for the Product Catalog database
     * @param databaseId The ID of the database to query
     * @returns A type-safe QueryBuilder for the RecordProductCatalog record type
     */
    queryProductCatalog(databaseId: string): QueryBuilder<RecordProductCatalog, typeof RecordProductCatalogFieldTypes>;
  }
}

// Implement the method on the NotionCMS prototype
NotionCMS.prototype.queryProductCatalog = function(databaseId: string): QueryBuilder<RecordProductCatalog, typeof RecordProductCatalogFieldTypes> {
  return this.query<RecordProductCatalog, typeof RecordProductCatalogFieldTypes>(databaseId, RecordProductCatalogFieldTypes);
};

